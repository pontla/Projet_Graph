Syntax error, insert ";" to complete BlockStatementsSyntax error on token "(", ; expectedpublic static void algoritmedikjstra(Station depart,Station arrive,String heuredep, char critere)
	{
		Station depart;
		Station arrive;
		int hd = (int)(heuredep.charAt(0)+heuredep.charAt(1));
		int md = (int)(heuredep.charAt(3)+heuredep.charAt(4));
		
		int[] poidTrajets = new int[mesStations.length]() ;
		for(int i : poidTrajets)
		{i=-1;}
		
		Station[] precedences;
		
		int i=0 ;
		while(mesStations[i]!=depart)i++;
		poids[i]=0;
		
		
		//Algo meilleur Temps d arrivee entre lheure demandee pour le depart et l heure d arrivee en gare
		System.out.println("initialise");
		//initialisation
		for (Trajet traj : depart.trajets)
		{
			if ( heuredep < traj.hDep)
			{
				int i=0 ;
				while(mesStations[i]!=traj.gareArr)i++;
				
				int ha = (int)(traj.hArr.charAt(0)+traj.hArr.charAt(1));
				int ma = (int)(traj.hArr.charAt(3)+traj.hArr.charAt(4));
				
				if(poidsTrajet==-1 || poidsTrajets[i]> (ha-hd)*60 +ma-md)
				{
					poidTrajets[i]=(ha-hd)*60 +ma-md;
					precedence[i]=depart;
				}
			}
		}
		System.out.println("recherche distance proche");
		//Algo
		//Recherche de la distance la plus proche
		int k ;
		for( i=1;i<mesStations.length();i++)
		{
			if (min==-1 || min>poidTrajets[i])
			{
				k=i;
			}
		}
		Station plusproche= mesStations[k];
		boolean bool=(plusproche==arrive);		System.out.println("debut algo");
		while(bool=false)
		{
			int hd = (int)(heuredep.charAt(0)+heuredep.charAt(1));
			int md = (int)(heuredep.charAt(3)+heuredep.charAt(4));
			
			int min=poidsTrajets[0];
			
			
			for (Trajet traj : mesStations[k].trajets)
			{
				if (heuredep+poidTrajets[k] < traj.hDep)
				{
					int i=0 ;
					while(mesStations[i]!=traj.gareArr)i++;
					
					int ha = (int)(traj.hArr.charAt(0)+traj.hArr.charAt(1));
					int ma = (int)(traj.hArr.charAt(3)+traj.hArr.charAt(4));
					
					if(poidsTrajet==-1 || poidsTrajets[i]> (ha-hd)*60 +ma-md)
					{
						poidTrajets[i]=(ha-hd)*60 +ma-md;
						precedence[i]=plusproche;
					}
				 }
			}
			
			//Recherche de la distance la plus proche
			int k ;
			for( i=1;i<mesStations.length();i++)
			{
				if (min==-1 || min>poidTrajets[i])
				{
					k=i;
				}
			}
			Station plusproche= mesStations[k];
			bool=(plusproche==arrive);
	}